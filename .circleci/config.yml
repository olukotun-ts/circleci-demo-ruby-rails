version: 2.1

orbs:   # Import reusable modules of config logic
  aws-cli: circleci/aws-cli@1.4.0
  node: circleci/node@2
  ruby: circleci/ruby@1.1.0

commands:   # Define reusable commands
  set-build-id:
    description: "Create and write BUILD_ID to workspace"
    steps:
      - run:
          name: Set BUILD_ID
          command: |
            BUILD_TIME=$(date +'%m%d%Y-%H%M%S')
            BUILD_ID=$(echo "${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}-${CIRCLE_SHA1}-${BUILD_TIME}")

            echo "export BUILD_ID=$BUILD_ID" >> $BASH_ENV
            echo "export CCHOME_BUILD_ID=$BUILD_ID" >> $BASH_ENV

            echo $BUILD_ID > BUILD_ID.env 
      - run:
          name: Inspect IDs
          command: |
            echo "BUILD_ID: $BUILD_ID"
            echo "CCHOME_BUILD_ID: $CCHOME_BUILD_ID" 
      - persist_to_workspace:
          root: ./
          paths:
            - BUILD_ID.env
  get-build-id:
    description: "Read BUILD_ID from workspace"
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Get BUILD_ID
          command: |
            echo "export BUILD_ID=$(<BUILD_ID.env)" >> $BASH_ENV
            echo "export CCHOME_BUILD_ID=$(<BUILD_ID.env)" >> $BASH_ENV
      - run:
          name: Inspect IDs
          command: |
            echo "BUILD_ID: $BUILD_ID"
            echo "CCHOME_BUILD_ID: $CCHOME_BUILD_ID"

workflows:    # Collection of jobs orchestrated to run in a specific order
  version: 2
  build_test_deploy:
    jobs:
      - lint
      - test
      - build:
          requires:
            - lint
            - test
      - approve_deploy:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - approve_deploy
            
jobs: # Collection of commands needed to accomplish a specific task
  build:
    docker:   
      - image: cimg/ruby:2.7-node 
    resource_class: xlarge    
    steps:
      - checkout
      - get-build-id
      - run:
          name: Verify env vars
          command: |
            echo "BUILD_ID: $BUILD_ID"
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  test:
    docker:   # Supported environments include Windows, macOS, Linux, and Docker
      - image: cimg/ruby:2.7-node   # Convenience images optimized for performance
      - image: circleci/postgres:9.5-alpine   # Load sidecar images to extend execution environment
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ""
    resource_class: xlarge  # Options range from small to 2xlarge+
    parallelism: 5  # Split tests across multiple nodes
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"  # Caching dependencies speeds up builds
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - ruby/rspec-test   # Reuse logic from orbs
      - ruby/rubocop-check
  deploy:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  lint:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - set-build-id
